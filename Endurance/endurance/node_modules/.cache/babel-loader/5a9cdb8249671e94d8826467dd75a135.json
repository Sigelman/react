{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\Endurance\\\\endurance\\\\src\\\\pages\\\\treino.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { Link } from 'react-router-dom';\nimport ReactDataGrid from 'react-data-grid';\nimport loginImg from '../images/decatlo.png';\nimport api from '../services/api';\nimport '../styles/pages/treino.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Treino() {\n  _s();\n\n  //const params = useParams<PersonalParams>()\n  const history = useHistory();\n  const params = new URLSearchParams(history.location.search);\n  const [personal, setPersonal] = useState();\n  const [rows, setRows] = useState([]); //api.get(`personals/${params.get('id')}`).then(response => {\n  //  setPersonal(response.data);\n  //});\n  //const DataFormatter = ({ id }) => { return <Link to={{pathname:\"/cadastraraluno\", search: '?id='+params.get('id'), state: { detail: params.get('id') }}}>\n  //{ id }</Link> };\n  //<Button variant=\"contained\" color=\"primary\" startIcon={<EditIcon />}>\n  //Edit\n  //</Button>\n\n  const columns = [{\n    key: \"id\",\n    name: \"ID\",\n    editable: false\n  }, {\n    key: \"nome\",\n    name: \"NOME\",\n    editable: false\n  }, {\n    key: \"idade\",\n    name: \"IDADE\",\n    editable: false\n  }, {\n    key: \"sexo\",\n    name: \"SEXO\",\n    editable: false\n  }, {\n    key: \"peso\",\n    name: \"PESO\",\n    editable: false\n  }, {\n    key: \"altura\",\n    name: \"ALTURA\",\n    editable: false\n  }, {\n    key: \"cintura\",\n    name: \"CINTURA\",\n    editable: false\n  }, {\n    key: \"sessoes\",\n    name: \"SESSOES\",\n    editable: false\n  }, {\n    key: \"link\",\n    name: \"LINK\",\n    disableClickEventBubbling: true,\n    renderCell: () => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/cadastraraluno\",\n          search: '?id=' + params.get('id'),\n          state: {\n            detail: params.get('id')\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirm-button\",\n          type: \"button\",\n          children: \"Treino\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this);\n    }\n  }];\n  useEffect(() => {\n    api.get('personals/' + params.get('id')).then(response => {\n      setPersonal(response.data);\n\n      if (personal) {\n        setRows(personal.alunos);\n      }\n    });\n  }, [params.get('id')]);\n  const MyFormatter = {\n    render() {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/cadastraraluno\",\n          search: '?id=' + params.get('id'),\n          state: {\n            detail: params.get('id')\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this);\n    }\n\n  };\n\n  function MyFunctionalDataTable() {\n    const myCols = [{\n      key: \"id\",\n      name: \"ID\",\n      editable: false\n    }, {\n      key: \"nome\",\n      name: \"NOME\",\n      editable: false\n    }, {\n      key: \"idade\",\n      name: \"IDADE\",\n      editable: false\n    }, {\n      key: \"sexo\",\n      name: \"SEXO\",\n      editable: false\n    }, {\n      key: \"peso\",\n      name: \"PESO\",\n      editable: false\n    }, {\n      key: \"altura\",\n      name: \"ALTURA\",\n      editable: false\n    }, {\n      key: \"cintura\",\n      name: \"CINTURA\",\n      editable: false\n    }, {\n      key: \"sessoes\",\n      name: \"SESSOES\",\n      editable: false\n    }, {\n      key: \"link\",\n      name: \"Link\",\n      width: 200,\n      formatter: MyFormatter,\n      getRowMetaData: row => row\n    }];\n\n    if (personal) {\n      const createRowData = !personal.alunos ? '' : personal.alunos.map(function (obj, index) {\n        return {\n          \"id\": obj.id,\n          \"nome\": obj.nome,\n          //doesn't have to match a GUI column\n          \"idade\": obj.idade,\n          //doesn't have to match a GUI column \n          \"sexo\": obj.sexo,\n          \"peso\": obj.peso,\n          \"altura\": obj.altura,\n          \"cintura\": obj.cintura,\n          \"sessoes\": obj.sessoes\n        };\n      });\n      const rowGetter = createRowData.length;\n      return /*#__PURE__*/_jsxDEV(ReactDataGrid, {\n        columns: myCols,\n        rowGetter: rowGetter,\n        rowsCount: createRowData.length,\n        headerRowHeight: 35,\n        rowHeight: 35,\n        minHeight: createRowData.length < 15 ? 37 + 35 * createRowData.length : 500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n  const {\n    goBack\n  } = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-personal\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: loginImg,\n          alt: \"personal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Programar treino\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cadastrar login de aluno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Direito de c\\xF3pia\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"SSA Sistemas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: goBack,\n          children: /*#__PURE__*/_jsxDEV(FiArrowLeft, {\n            size: 24,\n            color: \"#FFF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"create-personal-form\",\n        children: MyFunctionalDataTable()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Treino, \"zsA5hTjJozqNotEgMrqXp7uBGZU=\", false, function () {\n  return [useHistory, useHistory];\n});\n\n_c = Treino;\nexport default Treino;\n\nvar _c;\n\n$RefreshReg$(_c, \"Treino\");","map":{"version":3,"sources":["C:/Projetos/Endurance/endurance/src/pages/treino.tsx"],"names":["React","useEffect","useState","useHistory","FiArrowLeft","Link","ReactDataGrid","loginImg","api","Treino","history","params","URLSearchParams","location","search","personal","setPersonal","rows","setRows","columns","key","name","editable","disableClickEventBubbling","renderCell","pathname","get","state","detail","then","response","data","alunos","MyFormatter","render","MyFunctionalDataTable","myCols","width","formatter","getRowMetaData","row","createRowData","map","obj","index","id","nome","idade","sexo","peso","altura","cintura","sessoes","rowGetter","length","goBack"],"mappings":"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","sourcesContent":["import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { FiArrowLeft, FiPlus } from \"react-icons/fi\";\r\nimport {Link} from 'react-router-dom';\r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\n\r\n\r\nimport loginImg from '../images/decatlo.png';\r\nimport api from '../services/api';\r\n\r\nimport '../styles/pages/treino.css';\r\nimport { StringifyOptions } from \"querystring\";\r\nimport FlatButton from \"material-ui/FlatButton\";\r\n\r\n\r\ninterface Aluno  {\r\n    id:number;\r\n    nome:string;\r\n    idade:number;\r\n    sexo:string;\r\n    peso:number;\r\n    altura:number;\r\n    cintura:number;\r\n    sessoes:number;\r\n}\r\n\r\ninterface Personal  {\r\n  id:string;\r\n  nome:string;\r\n  banco_id:string;\r\n  alunos:Array<{\r\n    id:number;\r\n    nome:string;\r\n    idade:number;\r\n    sexo:string;\r\n    peso:number;\r\n    altura:number;\r\n    cintura:number;\r\n    sessoes:number;\r\n  }>;\r\n}\r\n\r\n\r\nfunction Treino() {\r\n\r\n    //const params = useParams<PersonalParams>()\r\n\r\n    const history = useHistory();\r\n    const params = new URLSearchParams(history.location.search);\r\n\r\n    const [personal, setPersonal] = useState<Personal>();\r\n    const [rows,setRows] = useState<Aluno[]>([]);\r\n \r\n      //api.get(`personals/${params.get('id')}`).then(response => {\r\n      //  setPersonal(response.data);\r\n      //});\r\n      //const DataFormatter = ({ id }) => { return <Link to={{pathname:\"/cadastraraluno\", search: '?id='+params.get('id'), state: { detail: params.get('id') }}}>\r\n      //{ id }</Link> };\r\n\r\n      //<Button variant=\"contained\" color=\"primary\" startIcon={<EditIcon />}>\r\n      //Edit\r\n    //</Button>\r\n\r\n\r\n      \r\n      const columns = [\r\n        { key: \"id\", name: \"ID\", editable: false},\r\n        { key: \"nome\", name: \"NOME\", editable: false },\r\n        { key: \"idade\", name: \"IDADE\", editable: false },\r\n        { key: \"sexo\", name : \"SEXO\", editable: false },\r\n        { key: \"peso\", name: \"PESO\", editable: false},\r\n        { key: \"altura\", name:\"ALTURA\", editable:false},\r\n        { key: \"cintura\", name:\"CINTURA\", editable:false},\r\n        { key: \"sessoes\", name:\"SESSOES\", editable: false},\r\n        { key: \"link\", name:\"LINK\", disableClickEventBubbling: true,\r\n        renderCell: () => {\r\n          return (\r\n            <Link to={{pathname:\"/cadastraraluno\", search: '?id='+params.get('id'), state: { detail: params.get('id') }}}>\r\n              <button className=\"confirm-button\" type=\"button\">Treino</button>\r\n            </Link>\r\n          );}}\r\n        \r\n      ];\r\n\r\n    useEffect(()=> {\r\n      api.get('personals/'+params.get('id')).then(response => {\r\n        setPersonal(response.data);\r\n        if (personal){\r\n          setRows(personal.alunos);\r\n        }\r\n      });\r\n\r\n    }, [params.get('id')]);\r\n\r\n    const MyFormatter = ({\r\n      render(){\r\n        return(\r\n          <Link to={{pathname:\"/cadastraraluno\", search: '?id='+params.get('id'), state: { detail: params.get('id') }}}></Link>\r\n        );\r\n      }\r\n    });\r\n    \r\n    \r\n    function MyFunctionalDataTable(){\r\n      const myCols = [\r\n        { key: \"id\", name: \"ID\", editable: false},\r\n        { key: \"nome\", name: \"NOME\", editable: false },\r\n        { key: \"idade\", name: \"IDADE\", editable: false },\r\n        { key: \"sexo\", name : \"SEXO\", editable: false },\r\n        { key: \"peso\", name: \"PESO\", editable: false},\r\n        { key: \"altura\", name:\"ALTURA\", editable:false},\r\n        { key: \"cintura\", name:\"CINTURA\", editable:false},\r\n        { key: \"sessoes\", name:\"SESSOES\", editable: false},\r\n        { key: \"link\", name: \"Link\", width: 200, formatter: MyFormatter, getRowMetaData: (row)=>row},\r\n       ];\r\n      if (personal) {\r\n        const createRowData = !personal.alunos? '' :\r\n        personal.alunos.map(function(obj, index){\r\n          return {\"id\": obj.id,\r\n                  \"nome\": obj.nome, //doesn't have to match a GUI column\r\n                  \"idade\": obj.idade, //doesn't have to match a GUI column \r\n                  \"sexo\": obj.sexo,\r\n                  \"peso\":obj.peso,\r\n                  \"altura\":obj.altura,\r\n                  \"cintura\":obj.cintura,\r\n                  \"sessoes\":obj.sessoes,\r\n          }\r\n        });\r\n        const rowGetter =  createRowData.length;\r\n      \r\n        return (\r\n          <ReactDataGrid\r\n            columns={myCols}\r\n            rowGetter={rowGetter}\r\n            rowsCount={createRowData.length}\r\n            headerRowHeight={35}\r\n            rowHeight={35}\r\n            minHeight={createRowData.length<15? (37+(35*createRowData.length)) : 500}\r\n          />\r\n      \r\n        )\r\n      }\r\n    \r\n    }\r\n\r\n\r\n    const { goBack } = useHistory();\r\n\r\n\r\n    return (\r\n        <div id=\"page-personal\">\r\n            <aside>\r\n               <header>\r\n                   <img src={loginImg} alt=\"personal\" />\r\n                   <h2>Programar treino</h2>\r\n                   <h2>Cadastrar login de aluno</h2>\r\n               </header> \r\n               <footer>\r\n                    <strong>Direito de cópia</strong>\r\n                    <span>SSA Sistemas</span>\r\n                      <button type=\"button\" onClick={goBack}>\r\n                        <FiArrowLeft size={24} color=\"#FFF\" />\r\n                      </button>\r\n               </footer>\r\n            </aside>\r\n            <main>\r\n                <form  className=\"create-personal-form\">\r\n                  {MyFunctionalDataTable()}\r\n                </form>\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Treino;"]},"metadata":{},"sourceType":"module"}