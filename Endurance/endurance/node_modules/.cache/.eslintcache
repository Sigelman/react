[{"C:\\Projetos\\Endurance\\endurance\\src\\index.tsx":"1","C:\\Projetos\\Endurance\\endurance\\src\\App.tsx":"2","C:\\Projetos\\Endurance\\endurance\\src\\routes.tsx":"3","C:\\Projetos\\Endurance\\endurance\\src\\pages\\landing.tsx":"4","C:\\Projetos\\Endurance\\endurance\\src\\pages\\login.tsx":"5","C:\\Projetos\\Endurance\\endurance\\src\\services\\api.ts":"6","C:\\Projetos\\Endurance\\endurance\\src\\pages\\cadastrarLogin.tsx":"7","C:\\Projetos\\Endurance\\endurance\\src\\pages\\personal.tsx":"8","C:\\Projetos\\Endurance\\endurance\\src\\pages\\novasenha.tsx":"9","C:\\Projetos\\Endurance\\endurance\\src\\pages\\aluno.tsx":"10","C:\\Projetos\\Endurance\\endurance\\src\\pages\\cadastrarAluno.tsx":"11","C:\\Projetos\\Endurance\\endurance\\src\\pages\\treino.tsx":"12"},{"size":200,"mtime":1623767174305,"results":"13","hashOfConfig":"14"},{"size":164,"mtime":1623789309379,"results":"15","hashOfConfig":"14"},{"size":1150,"mtime":1624473782261,"results":"16","hashOfConfig":"14"},{"size":888,"mtime":1623938651502,"results":"17","hashOfConfig":"14"},{"size":3471,"mtime":1624284638785,"results":"18","hashOfConfig":"14"},{"size":127,"mtime":1623940528596,"results":"19","hashOfConfig":"14"},{"size":4143,"mtime":1624140328457,"results":"20","hashOfConfig":"14"},{"size":1970,"mtime":1624473980576,"results":"21","hashOfConfig":"14"},{"size":2886,"mtime":1624285004452,"results":"22","hashOfConfig":"14"},{"size":1781,"mtime":1624284997549,"results":"23","hashOfConfig":"14"},{"size":7065,"mtime":1624580282566,"results":"24","hashOfConfig":"14"},{"size":4315,"mtime":1624705959878,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9x4w7h",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projetos\\Endurance\\endurance\\src\\index.tsx",[],["57","58"],"C:\\Projetos\\Endurance\\endurance\\src\\App.tsx",[],"C:\\Projetos\\Endurance\\endurance\\src\\routes.tsx",[],"C:\\Projetos\\Endurance\\endurance\\src\\pages\\landing.tsx",[],"C:\\Projetos\\Endurance\\endurance\\src\\pages\\login.tsx",["59","60"],"import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FiArrowLeft, FiPlus } from \"react-icons/fi\";\r\n\r\nimport loginImg from '../images/cadeado.png';\r\nimport api from '../services/api';\r\n\r\nimport '../styles/pages/login.css';\r\n\r\n\r\ninterface Logins {\r\n  id: string;\r\n  email: string;\r\n  senha: string;\r\n  primeiro_acesso:boolean;\r\n  perfil:string;\r\n  cadastro_id:string;\r\n}\r\n\r\n\r\nfunction Login() {\r\n\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [logins, setLogins] = useState<Logins[]>([]);\r\n    let id = '';\r\n    let achou = false;\r\n    let perfil = '';\r\n    let cadastro_id = '';\r\n    let primeiro_acesso = true;\r\n\r\n    useEffect(()=> {\r\n      api.get('logins').then(response => {\r\n        setLogins(response.data);\r\n      });\r\n    }, []);\r\n\r\n    function handleSubmit(event: FormEvent){\r\n      event.preventDefault();\r\n\r\n\r\n      logins.forEach(lgn =>{\r\n          if (lgn.email===email) {\r\n            if (lgn.senha===senha){\r\n                id = lgn.id;\r\n                achou = true;\r\n                perfil = lgn.perfil;\r\n                cadastro_id = lgn.cadastro_id;\r\n                primeiro_acesso = lgn.primeiro_acesso;\r\n            } \r\n          };\r\n      });\r\n      \r\n      \r\n      if (achou){\r\n          if (perfil==='P') {\r\n              history.push({pathname:'/personal', search: '?id='+cadastro_id, state: { detail: cadastro_id }});\r\n          } else \r\n          if (perfil === 'A') {\r\n              {primeiro_acesso ? history.push({pathname:'/novasenha', search: '?id='+id, state: { detail: id }}):\r\n              history.push({pathname:'/aluno', search: '?id='+id, state: { detail: id }})};\r\n          };\r\n\r\n      } else alert('usuário não encontrado');\r\n//            {achou ? history.push({pathname:'/cadastrarlogin', state: { id: cadastro_id }}):alert('usuário não encontrado')};\r\n  }; \r\n\r\n    const { goBack } = useHistory();\r\n\r\n    return (\r\n        <div id=\"page-login\">\r\n            <aside>\r\n               <header>\r\n                   <img src={loginImg} alt=\"login\" />\r\n                   <h2>Efetuar login no sistema</h2>\r\n                   <p>Sua saúde em primeiro lugar :)</p>\r\n               </header> \r\n               <footer>\r\n                    <strong>Direito de cópia</strong>\r\n                    <span>SSA Sistemas</span>\r\n                      <button type=\"button\" onClick={goBack}>\r\n                        <FiArrowLeft size={24} color=\"#FFF\" />\r\n                      </button>\r\n               </footer>\r\n            </aside>\r\n            <main>\r\n                <form onSubmit={handleSubmit} className=\"create-login-form\">\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Email</label>\r\n                      <input id=\"email\" value={email} onChange={event =>setEmail(event.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Senha</label>\r\n                      <input id=\"senha\" type='password' value={senha} onChange={event =>setSenha(event.target.value)}/>\r\n                    </div>\r\n                    <button className=\"confirm-button\" type=\"submit\">\r\n                            Confirmar\r\n                    </button>\r\n\r\n                </form>\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Projetos\\Endurance\\endurance\\src\\services\\api.ts",[],"C:\\Projetos\\Endurance\\endurance\\src\\pages\\cadastrarLogin.tsx",["61"],"import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\n\r\nimport CadloginImg from '../images/personal.png';\r\nimport api from '../services/api';\r\n\r\nimport '../styles/pages/cadastrarLogin.css';\r\n\r\ninterface Personals {\r\n  id: string;\r\n  nome: string;\r\n  banco_id: string; \r\n}\r\n\r\n//interface cadastrarLogins {\r\n//  nome: string;  \r\n//  email: string;\r\n//  senha: string;\r\n//  cadastro_id:string;\r\n//}\r\n\r\n\r\n\r\n\r\nfunction CadastrarLogin() {\r\n\r\n    let achou = false;\r\n   let personalNome = '';\r\n\r\n    const history = useHistory();\r\n    const queryParams = new URLSearchParams(history.location.search);\r\n  \r\n    const [personals,setPersonals] = useState<Personals[]>([]);\r\n\r\n    useEffect(()=> {\r\n    api.get('personals').then(response => {\r\n      setPersonals(response.data);\r\n      });\r\n        });\r\n          \r\n        //const [personalNome, setPersonalNome] = useState('');\r\n\r\n        personals.forEach(psl =>{\r\n          if (psl.id==queryParams.get('id')) {\r\n                achou = true;\r\n                personalNome = psl.nome;\r\n          };\r\n          });\r\n        \r\n        const [nome, setNome]   = useState('');\r\n        const [email, setEmail] = useState('');\r\n        const [senha, setSenha] = useState('123456');\r\n    \r\n\r\n    async function handleSubmit(event: FormEvent){\r\n      event.preventDefault();\r\n\r\n      let idade = 0;\r\n      let sexo = 'M';\r\n      let peso = 0;\r\n      let altura = 0;\r\n      let cintura = 0;\r\n      let sessoes = 0;\r\n      let personal_id = queryParams.get('id');\r\n\r\n      \r\n      const aluno = {nome,idade,sexo,peso,altura,cintura,sessoes,personal_id };\r\n      //api.post('alunos',aluno).then(response => {response.data});\r\n      const response = await api.post('alunos',aluno);\r\n\r\n      const alunos = response.data;\r\n\r\n    \r\n      let perfil = 'A';\r\n      let primeiro_acesso = true;     \r\n      let cadastro_id = alunos.id;\r\n      \r\n      const login = {email,senha,primeiro_acesso,perfil,cadastro_id};\r\n      await api.post('logins',login);\r\n      alert('cadastro realizado com suesso');\r\n        \r\n  }; \r\n\r\n   const { goBack } = useHistory();\r\n\r\n    return (\r\n        <div id=\"page-cadastrarLogin\">\r\n            <aside>\r\n               <header>\r\n                   <img src={CadloginImg} alt=\"login\" />\r\n                   <h2>Cadastrar login dos alunos</h2>\r\n                   <p>Sua saúde em primeiro lugar :)</p>\r\n               </header> \r\n               <footer>\r\n                    <strong>Direito de cópia</strong>\r\n                    <span>SSA Sistemas</span>\r\n                      <button type=\"button\" onClick={goBack}>\r\n                        <FiArrowLeft size={24} color=\"#FFF\" />\r\n                      </button>\r\n               </footer>\r\n            </aside>\r\n            <main>\r\n                <form onSubmit={handleSubmit} className=\"create-cadlogin-form\">\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Nome</label>\r\n                      <input id=\"nome\" value={nome} onChange={event =>setNome(event.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Email</label>\r\n                      <input id=\"email\" value={email} onChange={event =>setEmail(event.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Senha</label>\r\n                      <input id=\"senha\" value={senha} onChange={event =>setSenha(event.target.value)} readOnly={achou}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Personal</label>\r\n                      <input id=\"personal\" value={personalNome} readOnly={achou}/>\r\n                    </div>\r\n\r\n                    <button className=\"confirm-button\" type=\"submit\">\r\n                            Confirmar\r\n                    </button>\r\n\r\n                </form>\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CadastrarLogin;","C:\\Projetos\\Endurance\\endurance\\src\\pages\\personal.tsx",["62","63","64","65","66"],"import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FiArrowLeft, FiPlus } from \"react-icons/fi\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nimport loginImg from '../images/decatlo.png';\r\nimport api from '../services/api';\r\n\r\nimport '../styles/pages/personal.css';\r\n\r\n\r\nfunction Personal() {\r\n\r\n    const history = useHistory();\r\n    const queryParams = new URLSearchParams(history.location.search);\r\n\r\n    const { goBack } = useHistory();\r\n\r\n    return (\r\n        <div id=\"page-personal\">\r\n            <aside>\r\n               <header>\r\n                   <img src={loginImg} alt=\"personal\" />\r\n                   <h2>Programar treino</h2>\r\n                   <h2>Cadastrar login de aluno</h2>\r\n               </header> \r\n               <footer>\r\n                    <strong>Direito de cópia</strong>\r\n                    <span>SSA Sistemas</span>\r\n                      <button type=\"button\" onClick={goBack}>\r\n                        <FiArrowLeft size={24} color=\"#FFF\" />\r\n                      </button>\r\n               </footer>\r\n            </aside>\r\n            <main>\r\n                <form  className=\"create-personal-form\">\r\n                    <Link to={{pathname:\"/CadastrarLogin\", search: '?id='+queryParams.get('id'), state: { detail: queryParams.get('id') }}}>\r\n                        <button className=\"confirm-button\" type=\"button\">\r\n                                Cadastrar Login do Aluno\r\n                        </button>\r\n                    </Link>\r\n\r\n                    <Link to={{pathname:\"/Treino\", search: '?id='+queryParams.get('id'), state: { detail: queryParams.get('id') }}}>\r\n                        <button className=\"confirm-button\" type=\"button\">\r\n                                Programar Treino\r\n                        </button>\r\n                    </Link>\r\n\r\n                </form>\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Personal;","C:\\Projetos\\Endurance\\endurance\\src\\pages\\novasenha.tsx",["67","68","69","70"],"import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FiArrowLeft, FiPlus } from \"react-icons/fi\";\r\n\r\nimport loginImg from '../images/login.png';\r\nimport api from '../services/api';\r\n\r\nimport '../styles/pages/login.css';\r\n\r\n\r\ninterface Logins {\r\n  id: string;\r\n  email: string;\r\n  senha: string;\r\n  primeiro_acesso:boolean;\r\n  perfil:string;\r\n  cadastro_id:string;\r\n}\r\n\r\nfunction NovaSenha() {\r\n\r\n    const history = useHistory();\r\n    const queryParams = new URLSearchParams(history.location.search);\r\n\r\n    const [novasenha, setNovasenha] = useState('');\r\n    const [confirmarsenha, setConfirmarsenha] = useState('');\r\n    //const [logins, setLogins] = useState<Logins>();\r\n\r\n    useEffect(()=> {\r\n    });\r\n\r\n\r\n    async function handleSubmit(event: FormEvent){\r\n      event.preventDefault();\r\n\r\n      const resposta = await api.get('logins/'+queryParams.get('id'));\r\n      if (novasenha == confirmarsenha){\r\n        const logins = resposta.data;\r\n        logins.senha = novasenha;\r\n        logins.primeiro_acesso = false;\r\n        const response = await api.put('logins/'+queryParams.get('id'),logins);\r\n        alert('Senha alterada com suesso');\r\n        history.push('/app');\r\n      } else alert('As senhas não conferem');\r\n      \r\n\r\n  }; \r\n\r\n    const { goBack } = useHistory();\r\n\r\n    return (\r\n        <div id=\"page-login\">\r\n            <aside>\r\n               <header>\r\n                   <img src={loginImg} alt=\"login\" />\r\n                   <h2>Cadastrar Nova Senha</h2>\r\n                   <p>Sua saúde em primeiro lugar :)</p>\r\n               </header> \r\n               <footer>\r\n                    <strong>Direito de cópia</strong>\r\n                    <span>SSA Sistemas</span>\r\n                      <button type=\"button\" onClick={goBack}>\r\n                        <FiArrowLeft size={24} color=\"#FFF\" />\r\n                      </button>\r\n               </footer>\r\n            </aside>\r\n            <main>\r\n                <form onSubmit={handleSubmit} className=\"create-login-form\">\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Nova Senha</label>\r\n                      <input id=\"novasenha\" type='password' value={novasenha} onChange={event =>setNovasenha(event.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Confirmar Senha</label>\r\n                      <input id=\"confirmrsenha\" type='password' value={confirmarsenha} onChange={event =>setConfirmarsenha(event.target.value)}/>\r\n                    </div>\r\n                    <button className=\"confirm-button\" type=\"submit\">\r\n                            Confirmar\r\n                    </button>\r\n\r\n                </form>\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NovaSenha;","C:\\Projetos\\Endurance\\endurance\\src\\pages\\aluno.tsx",["71","72","73","74","75"],"import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FiArrowLeft, FiPlus } from \"react-icons/fi\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nimport loginImg from '../images/decatlo.png';\r\nimport api from '../services/api';\r\n\r\nimport '../styles/pages/personal.css';\r\n\r\n\r\nfunction Personal() {\r\n\r\n    const history = useHistory();\r\n    const queryParams = new URLSearchParams(history.location.search);\r\n\r\n    const { goBack } = useHistory();\r\n\r\n    return (\r\n        <div id=\"page-personal\">\r\n            <aside>\r\n               <header>\r\n                   <img src={loginImg} alt=\"personal\" />\r\n                   <h2>Atualizar cadastro</h2>\r\n                   <h2>executar Treino</h2>\r\n               </header> \r\n               <footer>\r\n                    <strong>Direito de cópia</strong>\r\n                    <span>SSA Sistemas</span>\r\n                      <button type=\"button\" onClick={goBack}>\r\n                        <FiArrowLeft size={24} color=\"#FFF\" />\r\n                      </button>\r\n               </footer>\r\n            </aside>\r\n            <main>\r\n                <form  className=\"create-personal-form\">\r\n                    <Link to={{pathname:\"/cadastraraluno\", search: '?id='+queryParams.get('id'), state: { detail: queryParams.get('id') }}}>\r\n                        <button className=\"confirm-button\" type=\"button\">\r\n                                Atualizar Cadastro\r\n                        </button>\r\n                    </Link>\r\n\r\n                    <button className=\"confirm-button\" type=\"button\">\r\n                            Executar Treino\r\n                    </button>\r\n\r\n                </form>\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Personal;","C:\\Projetos\\Endurance\\endurance\\src\\pages\\cadastrarAluno.tsx",["76","77","78","79","80","81","82"],"import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\n\r\nimport CadloginImg from '../images/fitness_homemMulher.png';\r\nimport api from '../services/api';\r\n\r\nimport '../styles/pages/cadastrarAluno.css';\r\n\r\ninterface alunoX  {\r\n  //id:string;\r\n  nome:string;\r\n  idade:string;\r\n  sexo:string;\r\n  peso:string;\r\n  altura:string;\r\n  cintura:string;\r\n  sessoes:string;\r\n  personal_id:string;\r\n}\r\n\r\n\r\nfunction CadastrarAluno() {\r\n  \r\n\r\n    const history = useHistory();\r\n    const queryParams = new URLSearchParams(history.location.search);\r\n  \r\n    const [nome,setNome] = useState('');\r\n    const [idade,setIdade] = useState('');\r\n    const [sexo,setSexo] = useState('');\r\n    const [peso,setPeso] = useState('');\r\n    const [altura,setAltura] = useState('');\r\n    const [cintura,setCintura] = useState('');\r\n    const [sessoes,setSessoes] = useState('2');\r\n    const [personal_id,setPersonalId] = useState('');\r\n    const [personalNome,setPersonalNome] = useState('');\r\n\r\n    //const [alunoAtualizado, setAlunoAtualizado] = useState<alunoX>();\r\n\r\n\r\n    useEffect(()=> {\r\n    //api.get('alunos').then(response => {\r\n    //  setAlunos(response.data);\r\n    //  });\r\n    fetchAluno();\r\n        },[]);\r\n\r\n    async function fetchAluno()  {\r\n        const response = await api.get('alunos/'+queryParams.get('id'));\r\n        \r\n        const  {nome,idade,sexo,peso,altura,cintura,sessoes,personal_id} = response.data;\r\n        const aluno = {nome,idade,sexo,peso,altura,cintura,sessoes,personal_id};\r\n            \r\n        //const [aluno,setAluno] = useState<Alunos>(response.data);\r\n        setNome(aluno.nome);\r\n        setIdade(aluno.idade);\r\n        setSexo(aluno.sexo);\r\n        setPeso(aluno.peso);\r\n        setAltura(aluno.altura);\r\n        setCintura(aluno.cintura);\r\n        setSessoes(aluno.sessoes);\r\n        setPersonalId(aluno.personal_id);\r\n        \r\n        const responsePersonal = await api.get('personals/'+personal_id);\r\n\r\n        const personal = responsePersonal.data;\r\n        setPersonalNome(personal.nome); \r\n\r\n       }\r\n\r\n    async function handleSubmit(event: FormEvent){\r\n      event.preventDefault();\r\n\r\n      const alunoAtualizado = {nome,idade,sexo,peso,altura,cintura,sessoes,personal_id};\r\n\r\n      const response = await api.put('alunos/'+queryParams.get('id'), alunoAtualizado);\r\n      alert('cadastro realizado com suesso');\r\n      history.push('/aluno');\r\n\r\n      //await api.put('alunos',aluno);\r\n      //alert('cadastro realizado com suesso');\r\n        \r\n  }; \r\n\r\n   const { goBack } = useHistory();\r\n\r\n    return (\r\n        <div id=\"page-cadastrarAluno\">\r\n            <aside>\r\n               <header>\r\n                   <img src={CadloginImg} alt=\"login\" />\r\n                   <h2>Atualizar Cadastro dos alunos</h2>\r\n                   <p>Sua saúde em primeiro lugar :)</p>\r\n               </header> \r\n               <footer>\r\n                    <strong>Direito de cópia</strong>\r\n                    <span>SSA Sistemas</span>\r\n                      <button type=\"button\" onClick={goBack}>\r\n                        <FiArrowLeft size={24} color=\"#FFF\" />\r\n                      </button>\r\n               </footer>\r\n            </aside>\r\n            <main>\r\n                <form onSubmit={handleSubmit} className=\"create-cadaluno-form\">\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Nome</label>\r\n                      <input id=\"nome\" value={nome} onChange={event =>setNome(event.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Idade</label>\r\n                      <input id=\"idade\" value={idade} onChange={event =>setIdade(event.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Sexo</label>\r\n                      <input id=\"sexo\" value={sexo} onChange={event =>setSexo(event.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Peso</label>\r\n                      <input id=\"peso\" value={peso} onChange={event =>setPeso(event.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Altura</label>\r\n                      <input id=\"altura\" value={altura} onChange={event =>setAltura(event.target.value)}/>\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Cintura</label>\r\n                      <input id=\"Cintura\" value={cintura} onChange={event =>setCintura(event.target.value)}/>\r\n                    </div>\r\n                    <div className=\"sessoes\"><label>Sessoes</label></div>\r\n                    <div className=\"radio\">\r\n                      <label>\r\n                        <input\r\n                          type=\"radio\" name=\"Nsessoes\"\r\n                          value=\"2\" onChange={event =>setSessoes(event.target.value)}  checked={sessoes==\"2\"}\r\n                        />\r\n                        Duas\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"radio\">\r\n                      <label>\r\n                        <input\r\n                          type=\"radio\" name=\"Nsessoes\"\r\n                          value=\"3\" onChange={event =>setSessoes(event.target.value)} checked={sessoes==\"3\"}\r\n                        />\r\n                        Três\r\n                      </label>\r\n                    </div>\r\n                    <div className=\"radio\">\r\n                      <label>\r\n                        <input\r\n                          type=\"radio\" name=\"Nsessoes\"\r\n                          value=\"4\" onChange={event =>setSessoes(event.target.value)} checked={sessoes==\"4\"}\r\n                        />\r\n                        Quatro\r\n                      </label>\r\n                    </div>                    \r\n                    <div className=\"radio\">\r\n                      <label>\r\n                        <input\r\n                          type=\"radio\" name=\"Nsessoes\"\r\n                          value=\"5\" onChange={event =>setSessoes(event.target.value)} checked={sessoes==\"5\"}\r\n                        />\r\n                        Cinco\r\n                      </label>\r\n                    </div>    \r\n                                   \r\n                    <div className=\"input-block\">\r\n                      <label htmlFor=\"name\">Personal</label>\r\n                      <input id=\"personal\" value={personalNome} onChange={event =>setPersonalNome(event.target.value)} readOnly={true}/>\r\n                    </div>\r\n\r\n                    <button className=\"confirm-button\" type=\"submit\">\r\n                            Confirmar\r\n                    </button>\r\n\r\n                </form>\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CadastrarAluno;","C:\\Projetos\\Endurance\\endurance\\src\\pages\\treino.tsx",["83","84","85","86","87","88","89","90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":3,"column":23,"nodeType":"98","messageId":"99","endLine":3,"endColumn":29},{"ruleId":"100","severity":1,"message":"101","line":61,"column":15,"nodeType":"102","messageId":"103","endLine":62,"endColumn":91},{"ruleId":"104","severity":1,"message":"105","line":45,"column":21,"nodeType":"106","messageId":"107","endLine":45,"endColumn":23},{"ruleId":"96","severity":1,"message":"108","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"109","line":1,"column":27,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"110","line":1,"column":38,"nodeType":"98","messageId":"99","endLine":1,"endColumn":46},{"ruleId":"96","severity":1,"message":"97","line":3,"column":23,"nodeType":"98","messageId":"99","endLine":3,"endColumn":29},{"ruleId":"96","severity":1,"message":"111","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":11},{"ruleId":"96","severity":1,"message":"97","line":3,"column":23,"nodeType":"98","messageId":"99","endLine":3,"endColumn":29},{"ruleId":"96","severity":1,"message":"112","line":11,"column":11,"nodeType":"98","messageId":"99","endLine":11,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":37,"column":21,"nodeType":"106","messageId":"107","endLine":37,"endColumn":23},{"ruleId":"96","severity":1,"message":"113","line":41,"column":15,"nodeType":"98","messageId":"99","endLine":41,"endColumn":23},{"ruleId":"96","severity":1,"message":"108","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"109","line":1,"column":27,"nodeType":"98","messageId":"99","endLine":1,"endColumn":36},{"ruleId":"96","severity":1,"message":"110","line":1,"column":38,"nodeType":"98","messageId":"99","endLine":1,"endColumn":46},{"ruleId":"96","severity":1,"message":"97","line":3,"column":23,"nodeType":"98","messageId":"99","endLine":3,"endColumn":29},{"ruleId":"96","severity":1,"message":"111","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":11},{"ruleId":"96","severity":1,"message":"114","line":10,"column":11,"nodeType":"98","messageId":"99","endLine":10,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":47,"column":11,"nodeType":"117","endLine":47,"endColumn":13,"suggestions":"118"},{"ruleId":"96","severity":1,"message":"113","line":77,"column":13,"nodeType":"98","messageId":"99","endLine":77,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":135,"column":104,"nodeType":"106","messageId":"107","endLine":135,"endColumn":106},{"ruleId":"104","severity":1,"message":"105","line":144,"column":103,"nodeType":"106","messageId":"107","endLine":144,"endColumn":105},{"ruleId":"104","severity":1,"message":"105","line":153,"column":103,"nodeType":"106","messageId":"107","endLine":153,"endColumn":105},{"ruleId":"104","severity":1,"message":"105","line":162,"column":103,"nodeType":"106","messageId":"107","endLine":162,"endColumn":105},{"ruleId":"96","severity":1,"message":"108","line":1,"column":16,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"96","severity":1,"message":"119","line":2,"column":22,"nodeType":"98","messageId":"99","endLine":2,"endColumn":31},{"ruleId":"96","severity":1,"message":"97","line":3,"column":23,"nodeType":"98","messageId":"99","endLine":3,"endColumn":29},{"ruleId":"96","severity":1,"message":"120","line":5,"column":25,"nodeType":"98","messageId":"99","endLine":5,"endColumn":28},{"ruleId":"96","severity":1,"message":"121","line":13,"column":10,"nodeType":"98","messageId":"99","endLine":13,"endColumn":26},{"ruleId":"96","severity":1,"message":"122","line":14,"column":8,"nodeType":"98","messageId":"99","endLine":14,"endColumn":18},{"ruleId":"96","severity":1,"message":"123","line":65,"column":11,"nodeType":"98","messageId":"99","endLine":65,"endColumn":27},{"ruleId":"115","severity":1,"message":"124","line":125,"column":8,"nodeType":"117","endLine":125,"endColumn":26,"suggestions":"125"},{"ruleId":"115","severity":1,"message":"126","line":125,"column":9,"nodeType":"127","endLine":125,"endColumn":25},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"@typescript-eslint/no-unused-vars","'FiPlus' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormEvent' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'api' is defined but never used.","'Logins' is defined but never used.","'response' is assigned a value but never used.","'alunoX' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAluno'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'useParams' is defined but never used.","'Row' is defined but never used.","'StringifyOptions' is defined but never used.","'FlatButton' is defined but never used.","'firstNameActions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params' and 'personal'. Either include them or remove the dependency array.",["131"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [fetchAluno]",{"range":"136","text":"137"},"Update the dependencies array to be: [params, personal]",{"range":"138","text":"139"},[1288,1290],"[fetchAluno]",[3385,3403],"[params, personal]"]